(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{190:function(t,e,a){t.exports=a.p+"assets/img/getting-started-result-example.7820ee84.jpg"},493:function(t,e,a){"use strict";a.r(e);var s=a(4),n=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"r-client"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#r-client"}},[t._v("#")]),t._v(" R Client")]),t._v(" "),e("h2",{attrs:{id:"useful-links"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#useful-links"}},[t._v("#")]),t._v(" Useful links")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://open-eo.github.io/openeo-r-client/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Documentation"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://open-eo.github.io/openeo-r-client/articles/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vignettes"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/Open-EO/openeo-r-client",target:"_blank",rel:"noopener noreferrer"}},[t._v("Code Repository"),e("OutboundLink")],1)]),t._v(" "),e("li",[t._v("for function documentation, use R's "),e("code",[t._v("?")]),t._v(" function or see the "),e("a",{attrs:{href:"https://open-eo.github.io/openeo-r-client/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("online documentation"),e("OutboundLink")],1)])]),t._v(" "),e("h2",{attrs:{id:"installation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#installation"}},[t._v("#")]),t._v(" Installation")]),t._v(" "),e("p",[t._v("Before you install the R client module into your R environment, please make sure that you have at least R version 3.6. Older versions might also work, but were not tested.")]),t._v(" "),e("p",[t._v("Stable releases can be installed from CRAN:")]),t._v(" "),e("div",{staticClass:"language-r extra-class"},[e("pre",{pre:!0,attrs:{class:"language-r"}},[e("code",[t._v("install.packages"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"openeo"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("Installing the development version")]),t._v(" "),e("p",[t._v("If you want to install the development version, you can install from GitHub. It may contain more features, but may also be unstable.")]),t._v(" "),e("p",[t._v("You need to have the package 'devtools' installed. If it is not installed use "),e("code",[t._v('install.packages("devtools")')]),t._v(".")]),t._v(" "),e("p",[t._v("Now you can use "),e("code",[t._v("install_github")]),t._v(" from the devtools package to install the development version:")]),t._v(" "),e("div",{staticClass:"language-r extra-class"},[e("pre",{pre:!0,attrs:{class:"language-r"}},[e("code",[t._v("devtools"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("install_github"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("repo"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Open-EO/openeo-r-client"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dependencies"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("TRUE")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ref"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"develop"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("If this gives you an error, something went wrong with the installation so please check the requirements again.")])]),t._v(" "),e("p",[t._v("If you have troubles installing the package, feel free to "),e("RouterLink",{attrs:{to:"/contact.html"}},[t._v("contact us")]),t._v(" or leave an issue at the "),e("a",{attrs:{href:"https://github.com/Open-EO/openeo-r-client/issues",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub project"),e("OutboundLink")],1),t._v(".")],1),t._v(" "),e("p",[t._v("Now that the installation was successfully finished, we can load the package and connect to openEO compliant back-ends.\nIn the following chapters we quickly walk through the main features of the R client.")]),t._v(" "),e("h2",{attrs:{id:"exploring-a-back-end"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#exploring-a-back-end"}},[t._v("#")]),t._v(" Exploring a back-end")]),t._v(" "),e("p",[t._v("If you do not know an openEO back-end that you want to connect to yet, you can have a look at the "),e("a",{attrs:{href:"https://hub.openeo.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("openEO Hub"),e("OutboundLink")],1),t._v(", to find all known back-ends with information on their capabilities.")]),t._v(" "),e("p",[t._v("For this tutorial we will use the openEO instance of Google Earth Engine, which is available at "),e("code",[t._v("https://earthengine.openeo.org")]),t._v(".\nNote that the code snippets in this guide work the same way for the other back-ends listed in the openEO Hub. Just the collection identifier and band names might differ.")]),t._v(" "),e("p",[t._v("First we need to establish a connection to the back-end.")]),t._v(" "),e("div",{staticClass:"language-r extra-class"},[e("pre",{pre:!0,attrs:{class:"language-r"}},[e("code",[t._v("library"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("openeo"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ngee "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" connect"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("host "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://earthengine.openeo.org"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("The object stored as variable "),e("code",[t._v("gee")]),t._v(" is a connection and resembles the "),e("code",[t._v("OpenEOClient")]),t._v(" - an object, that bundles all information and functions to interact with the openEO back-end. It can be used explicitly in all of the functions to determine which connection has to be used (usually parameter "),e("code",[t._v("con")]),t._v("). If only one connection is active, then you can omit the parameter, because the last active connection is always stored in a package environment and used if no specific connection was present (see "),e("code",[t._v("?active_connection")]),t._v(" in the package documentation).")]),t._v(" "),e("p",[t._v("The capabilities of the back-end and the collections are generally publicly available, unless the data collections are proprietary and licensing issues prevent the back-end provider from publishing the collection. For the publicly available information you do not need to have an account on the back-end for reading them.")]),t._v(" "),e("h3",{attrs:{id:"collections"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#collections"}},[t._v("#")]),t._v(" Collections")]),t._v(" "),e("p",[t._v("Collections represent the basic data the back-end provides (e.g. Sentinel 1 collection) and are therefore often used as input data for job executions ("),e("RouterLink",{attrs:{to:"/documentation/1.0/glossary.html#eo-data-collections"}},[t._v("more info on collections")]),t._v(").\nWith the following code snippet you can get all available collection names and their description. The collection list and its entries have their own implementations of the "),e("code",[t._v("print")]),t._v(" function. The collection list object is coerced into a "),e("code",[t._v("data.frame")]),t._v(" only for printing purposes and the collection for the collection some key information are printed.")],1),t._v(" "),e("p",[t._v("To get the collection list can be indexed by the collections ID to get the more details about the overview information. With the "),e("code",[t._v("describe_collection")]),t._v(" function you can get an even more detailed information about the collection.")]),t._v(" "),e("div",{staticClass:"language-r extra-class"},[e("pre",{pre:!0,attrs:{class:"language-r"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# get the collection list")]),t._v("\ncollections "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" list_collections"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# print an overview of the available collections (printed as data.frame or tibble)")]),t._v("\nprint"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("collections"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# to print more of the reduced overview metadata")]),t._v("\nprint"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("collections"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("$")]),t._v("`COPERNICUS"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("S2`"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# Dictionary of the full metadata of the "COPERNICUS/S2" collection (dict)')]),t._v("\ns2 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" describe_collection"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"COPERNICUS/S2"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# or use the collection entry from the list, e.g. collections$`COPERNICUS/S2`")]),t._v("\nprint"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("In general all metadata objects are based on lists, so you can use "),e("code",[t._v("str()")]),t._v(" to get the structure of the list and address fields by the "),e("code",[t._v("$")]),t._v(" operator.")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("If the package is used with RStudio the metadata can also be nicely rendered as a web page in the viewer panel by running "),e("code",[t._v('collection_viewer(x="COPERNICUS/S2")')]),t._v(".")])]),t._v(" "),e("h3",{attrs:{id:"processes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#processes"}},[t._v("#")]),t._v(" Processes")]),t._v(" "),e("p",[t._v("Processes in openEO are tasks that can be applied to (EO) data.\nThe input of a process might be the output of another process, so that several connected processes form a new (user-defined) process itself.\nTherefore, a process resembles the smallest unit of task descriptions in openEO ("),e("RouterLink",{attrs:{to:"/documentation/1.0/glossary.html#processes"}},[t._v("more details on processes")]),t._v(").\nThe following code snippet shows how to get the available processes.")],1),t._v(" "),e("div",{staticClass:"language-r extra-class"},[e("pre",{pre:!0,attrs:{class:"language-r"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# List of available openEO processes with full metadata")]),t._v("\nprocesses "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" list_processes"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# List of available openEO processes by identifiers (string)")]),t._v("\nprint"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("names"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("processes"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# print metadata of the process with ID "load_collection"')]),t._v("\nprint"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("processes"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("$")]),t._v("load_collection"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("The "),e("code",[t._v("list_processes()")]),t._v(" method returns a list of process metadata objects that the back-end provides.\nEach process list entry is a more complex list object (called 'ProcessInfo') and contains the process identifier and additional metadata about the process, such as expected arguments and return types.")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("As for the collection, processes can also be rendered as a web page in the viewer panel, if RStudio is used. In order to open the viewer use "),e("code",[t._v("process_viewer()")]),t._v(" with either a particular process ("),e("code",[t._v('process_viewer("load_collection")')]),t._v(") or you can pass on all processes ("),e("code",[t._v("process_viewer(processes)")]),t._v("). When all processes are chosen, there is also a search bar and a category tree.")])]),t._v(" "),e("p",[t._v("For other graphical overviews of the openEO processes, there is an "),e("RouterLink",{attrs:{to:"/documentation/1.0/processes.html"}},[t._v("online documentation")]),t._v(" for general process descriptions and the "),e("a",{attrs:{href:"https://hub.openeo.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("openEO Hub"),e("OutboundLink")],1),t._v(" for back-end specific process descriptions.")],1),t._v(" "),e("h2",{attrs:{id:"authentication"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#authentication"}},[t._v("#")]),t._v(" Authentication")]),t._v(" "),e("p",[t._v("In the code snippets above, authentication is usually not necessary, since we only fetch general information about the back-end.\nTo run your own jobs at the back-end or to access job results, you need to authenticate at the back-end.")]),t._v(" "),e("p",[t._v("Depending on the back-end, there might be two different approaches to authenticate.\nYou need to inform yourself at your back-end provider of choice, which authentication approach you have to carry out and how to obtain login credentials for yourself and your 'openeo' installation in R.")]),t._v(" "),e("p",[t._v("You can also have a look at the "),e("a",{attrs:{href:"https://hub.openeo.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("openEO Hub"),e("OutboundLink")],1),t._v(" to see the available authentication types of the back-ends.\nFor Google Earth Engine, only "),e("a",{attrs:{href:"#basic-authentication"}},[t._v("Basic Authentication")]),t._v(" is supported at the moment.")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("Recommendation")]),t._v(" "),e("p",[t._v("The Google Earth Engine implementation for openEO only supports Basic authentication, but generally the preferred authentication method is "),e("a",{attrs:{href:"#openid-connect-authentication"}},[t._v("OpenID Connect")]),t._v(" due to better security mechanisms implemented in the OpenID Connect protocol.")])]),t._v(" "),e("h3",{attrs:{id:"basic-authentication"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#basic-authentication"}},[t._v("#")]),t._v(" Basic Authentication")]),t._v(" "),e("p",[t._v("The Basic authentication method is a common way of authenticate HTTP requests given username and password.")]),t._v(" "),e("p",[t._v("The following code snippet shows how to log in via Basic authentication:")]),t._v(" "),e("div",{staticClass:"language-r extra-class"},[e("pre",{pre:!0,attrs:{class:"language-r"}},[e("code",[t._v("login"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("login_type"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"basic"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      user"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"user"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      password"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"password"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("You can get username and password here: "),e("a",{attrs:{href:"https://github.com/Open-EO/openeo-earthengine-driver#demo",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/Open-EO/openeo-earthengine-driver#demo"),e("OutboundLink")],1)])]),t._v(" "),e("p",[t._v("After successfully calling the "),e("code",[t._v("login")]),t._v(' method with the "basic" login type, you are logged into the back-end with your account.\nThis means, that every call that comes after that via the connection variable is executed by your user account.')]),t._v(" "),e("h3",{attrs:{id:"openid-connect-authentication"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#openid-connect-authentication"}},[t._v("#")]),t._v(" OpenID Connect Authentication")]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),e("p",[t._v("For Google Earth Engine, only "),e("a",{attrs:{href:"#basic-authentication"}},[t._v("Basic Authentication")]),t._v(" is supported at the moment.")])]),t._v(" "),e("p",[t._v("The OIDC ("),e("a",{attrs:{href:"https://openid.net/connect/",target:"_blank",rel:"noopener noreferrer"}},[t._v("OpenID Connect"),e("OutboundLink")],1),t._v(") authentication can be used to authenticate via an external service.")]),t._v(" "),e("p",[t._v("The following code snippet shows how to log in via OIDC authentication if the back-end supports the simplified authentication method:")]),t._v(" "),e("div",{staticClass:"language-r extra-class"},[e("pre",{pre:!0,attrs:{class:"language-r"}},[e("code",[t._v("login"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("The following code snippet shows how to log in via OIDC authentication if the simplified authentication method doesn't work and you need to provide a client ID and secret:")]),t._v(" "),e("div",{staticClass:"language-r extra-class"},[e("pre",{pre:!0,attrs:{class:"language-r"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# get supported OIDC providers which the back-end supports")]),t._v("\noidc_providers "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" list_oidc_providers"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nlogin"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("provider "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" oidc_providers"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("$")]),t._v("some_provider"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      config "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" list"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        client_id"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"..."')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        secret "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"..."')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("Calling this method opens your system web browser, with which you can authenticate yourself on the back-end authentication system.\nAfter that the website will give you the instructions to go back to the R client, where your connection has logged your account in.\nThis means, that every call that comes after that via the connection variable is executed by your user account.")]),t._v(" "),e("h2",{attrs:{id:"creating-a-user-defined-process"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#creating-a-user-defined-process"}},[t._v("#")]),t._v(" Creating a (user-defined) process")]),t._v(" "),e("p",[t._v("Now that we know how to discover the back-end and how to authenticate, lets continue by creating a new batch job to process some data.")]),t._v(" "),e("p",[t._v("First we need to create a process builder object that carries all the available predefined openEO processes of the connected back-end as attached R functions with the parameters stated in the process metadata.")]),t._v(" "),e("div",{staticClass:"language-r extra-class"},[e("pre",{pre:!0,attrs:{class:"language-r"}},[e("code",[t._v("p "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" processes"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("The functions of the builder return process nodes, which represent a particular result in the workflow. As one of the first steps we need to select the source data collection.")]),t._v(" "),e("div",{staticClass:"language-r extra-class"},[e("pre",{pre:!0,attrs:{class:"language-r"}},[e("code",[t._v("datacube "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("$")]),t._v("load_collection"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  id "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"COPERNICUS/S1_GRD"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  spatial_extent"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("list"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("west "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("16.06")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" south "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("48.06")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" east "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("16.65")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" north "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("48.35")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  temporal_extent"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("c"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2017-03-01"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2017-04-01"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  bands"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("c"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"VV"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"VH"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("This results in a process node that represents a "),e("RouterLink",{attrs:{to:"/documentation/1.0/glossary.html#spatial-datacubes"}},[e("code",[t._v("datacube")])]),t._v(' and contains the "COPERNICUS/S1_GRD" data restricted to the given spatial extent, the given temporal extent and the given bands .')],1),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("Sample Data Retrieval")]),t._v(" "),e("p",[t._v("In order to get a better understanding about the processing mechanisms and the data structures used in openEO Platform, it helps to check the actual data from time to time.\nThe function "),e("a",{attrs:{href:"https://open-eo.github.io/openeo-r-client/reference/get_sample.html",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("get_sample")]),e("OutboundLink")],1),t._v(" aids the user in downloading data for a very small spatial extent. It is automatically loaded into R so that you can directly inspect it with "),e("code",[t._v("stars")]),t._v('.\nRead the vignette on "'),e("a",{attrs:{href:"https://open-eo.github.io/openeo-r-client/articles/sample_data.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Sample Data Retrieval"),e("OutboundLink")],1),t._v('" for more details.')])]),t._v(" "),e("p",[t._v("Having the input data ready, we want to apply a process on the datacube.\nTherefore, we can call the process directly on the datacube object, which then returns a datacube with the process applied.")]),t._v(" "),e("div",{staticClass:"language-r extra-class"},[e("pre",{pre:!0,attrs:{class:"language-r"}},[e("code",[t._v("min_reducer "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("context"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  return"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("$")]),t._v("min"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nreduced "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("$")]),t._v("reduce_dimension"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" datacube"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reducer "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" min_reducer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dimension"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"t"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("The datacube is now reduced by the time dimension named "),e("code",[t._v("t")]),t._v(', by taking the minimum value of the timeseries values. Now the datacube has no time dimension left. Other so called "reducer" processes exist, e.g. for computing maximum and mean values.')]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),e("p",[t._v("Everything applied to the datacube at this point is neither executed locally on your machine nor executed on the back-end.\nIt just defines the input data and process chain the back-end needs to apply when it sends the datacube to the back-end and executes it there.\nHow this can be done is the topic of the next chapter.")])]),t._v(" "),e("p",[t._v("After applying all processes you want to execute, we need to tell the back-end to export the datacube, for example as GeoTiff:")]),t._v(" "),e("div",{staticClass:"language-r extra-class"},[e("pre",{pre:!0,attrs:{class:"language-r"}},[e("code",[t._v("formats "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" list_file_formats"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nresult "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("$")]),t._v("save_result"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" reduced"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" format "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" formats"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("$")]),t._v("output"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("$")]),t._v("`GTIFF"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("ZIP`"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("The first line retrieves the back-ends offered input and output formats. The second line creates the result node, which stores the data as a zipped GeoTiff.")]),t._v(" "),e("h2",{attrs:{id:"batch-job-management"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#batch-job-management"}},[t._v("#")]),t._v(" Batch Job Management")]),t._v(" "),e("p",[t._v("After you have finished working on your (user-defined) process, we can now send it to the back-end and start the execution.\nIn openEO, an execution of a (user-defined) process is called a "),e("RouterLink",{attrs:{to:"/documentation/1.0/glossary.html#data-processing-modes"}},[t._v("(batch) job")]),t._v(".\nTherefore, we need to create a job at the back-end using our datacube, giving it the title "),e("code",[t._v("Example Title")]),t._v(".")],1),t._v(" "),e("div",{staticClass:"language-r extra-class"},[e("pre",{pre:!0,attrs:{class:"language-r"}},[e("code",[t._v("job "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" create_job"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("graph"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("result"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("title "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Example Title"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("The "),e("code",[t._v("create_job")]),t._v(" method sends all necessary information to the back-end and creates a new job, which gets returned.\nAfter this, the job is just created, but has not started the execution at the back-end yet.\nIt needs to be queued for processing explicitly:")]),t._v(" "),e("div",{staticClass:"language-r extra-class"},[e("pre",{pre:!0,attrs:{class:"language-r"}},[e("code",[t._v("start_job"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("job "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" job"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("After the job was executed, status updates can be fetched by using the "),e("code",[t._v("list_jobs()")]),t._v(" function. This function returns a list of job descriptions, which can be indexed with the jobs ID to limit the search results. But remember that only "),e("code",[t._v("list_jobs()")]),t._v(" refreshes this list. So, to monitor a job you have to iteratively call the job ("),e("code",[t._v("describe_job()")]),t._v(") or the job list "),e("code",[t._v("list_jobs()")]),t._v(".")]),t._v(" "),e("div",{staticClass:"language-r extra-class"},[e("pre",{pre:!0,attrs:{class:"language-r"}},[e("code",[t._v("jobs "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" list_jobs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\njobs "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# printed as a tibble or data.frame, but the object is a list")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# or use the job id (in this example 'cZ2ND0Z5nhBFNQFq') as index to get a particular job overview")]),t._v("\njobs"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("$")]),t._v("cZ2ND0Z5nhBFNQFq\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# alternatively request detailed information about the job")]),t._v("\ndescribe_job"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("job "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" job"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("When the job is finished, calling "),e("code",[t._v("download_results()")]),t._v(" will download the results of a job. Using "),e("code",[t._v("list_results()")]),t._v(" will return an overview about the created files and their download link or it states the error message, in case of an error.")]),t._v(" "),e("div",{staticClass:"language-r extra-class"},[e("pre",{pre:!0,attrs:{class:"language-r"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# list the processed results")]),t._v("\nlist_results"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("job "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" job"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# download all the files into a folder on the file system")]),t._v("\ndownload_results"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("job "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" job"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" folder "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/some/folder/on/filesystem"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),e("p",[t._v("The printing behavior and the actual data structure might differ!")])]),t._v(" "),e("p",[t._v("Now you know the general workflow of job executions.")]),t._v(" "),e("h2",{attrs:{id:"full-example"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#full-example"}},[t._v("#")]),t._v(" Full Example")]),t._v(" "),e("p",[t._v("In this chapter we will show a full example of an earth observation use case using the R client and the Google Earth Engine back-end.\nInstead of batch job processing, we compute the image synchronously. Synchronous processing means the result is directly returned in the response, which usually works only for smaller amounts of data.")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("Use Case")]),t._v(" "),e("p",[t._v("We want to produce a monthly RGB composite of Sentinel 1 backscatter data over the area of Vienna, Austria for three\nmonths in 2017. This can be used for classification and crop monitoring.")])]),t._v(" "),e("p",[t._v("In the following code example, we use inline code comments to describe what we are doing.")]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),e("p",[t._v("The username and password in the example above work at the time of writing, but may be invalid at the time you read this. Please "),e("RouterLink",{attrs:{to:"/contact.html"}},[t._v("contact us")]),t._v(" for credentials.")],1)]),t._v(" "),e("div",{staticClass:"language-r extra-class"},[e("pre",{pre:!0,attrs:{class:"language-r"}},[e("code",[t._v("library"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("openeo"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nlibrary"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tibble"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nuser "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"group7"')]),t._v("\npwd "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test123"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# connect  to the back-end and login either via explicit call of login, or use your credentials in the connect function")]),t._v("\ngee "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" connect"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("host "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://earthengine.openeo.org"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("user "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" user"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("password "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pwd"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("login_type "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"basic"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# get the process collection to use the predefined processes of the back-end")]),t._v("\np "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" processes"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# get the collection list to get easier access to the collection ids, via auto completion")]),t._v("\ncollections "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" list_collections"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# get the formats")]),t._v("\nformats "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" list_file_formats"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# load the initial data collection and limit the amount of data loaded")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# note: for the collection id and later the format you can also use the its character value")]),t._v("\ndata "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("$")]),t._v("load_collection"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" collections"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("$")]),t._v("`COPERNICUS"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("S1_GRD`"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                         spatial_extent "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" list"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("west"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("16.06")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n                                               south"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("48.06")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                                               east"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("16.65")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                                               north"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("48.35")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                         temporal_extent "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2017-03-01"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2017-06-01"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                         bands "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"VV"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# create three monthly sub data sets, which will be merged back into a single data cube later")]),t._v("\nmarch "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("$")]),t._v("filter_temporal"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                          extent "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2017-03-01"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2017-04-01"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\napril "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("$")]),t._v("filter_temporal"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                          extent "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2017-04-01"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2017-05-01"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nmay "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("$")]),t._v("filter_temporal"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                        extent "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2017-05-01"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2017-06-01"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The aggregation function for the following temporal reducer")]),t._v("\nagg_fun_mean "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" context"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  mean"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nmarch_reduced "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("$")]),t._v("reduce_dimension"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" march"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                                   reducer "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" agg_fun_mean"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                                   dimension "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"t"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\napril_reduced "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("$")]),t._v("reduce_dimension"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" april"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                                   reducer "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" agg_fun_mean"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                                   dimension "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"t"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nmay_reduced "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("$")]),t._v("reduce_dimension"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" may"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                                 reducer "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" agg_fun_mean"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                                 dimension "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"t"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Each band is currently called VV. We need to rename at least the label of one dimension, ")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# because otherwise identity of the data cubes is assumed. The bands dimension consists ")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# only of one label, so we can rename this to be able to merge those data cubes.")]),t._v("\nmarch_renamed "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("$")]),t._v("rename_labels"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" march_reduced"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                                dimension "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bands"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                                target "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"R"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                                source "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"VV"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\napril_renamed "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("$")]),t._v("rename_labels"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" april_reduced"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                                dimension "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bands"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                                target "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"G"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                                source "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"VV"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nmay_renamed "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("$")]),t._v("rename_labels"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" may_reduced"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                              dimension "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bands"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                              target "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"B"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                              source "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"VV"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# combine the individual data cubes into one")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# this is done one by one, since the dimensionalities have to match between each of the data cubes")]),t._v("\nmerge_1 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("$")]),t._v("merge_cubes"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cube1 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" march_renamed"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("cube2 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" april_renamed"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nmerge_2 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("$")]),t._v("merge_cubes"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cube1 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" merge_1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cube2 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" may_renamed"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# rescale the the back scatter measurements into 8Bit integer to view the results as PNG")]),t._v("\nrescaled "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("$")]),t._v("apply"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" merge_2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        process "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("context"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          p"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("$")]),t._v("linear_scale_range"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" inputMin "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("inputMax "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" outputMin "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" outputMax "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# export shall be format PNG")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# look at the format description")]),t._v("\nformats"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("$")]),t._v("output"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("$")]),t._v("PNG\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# store the results using the format and set the create options")]),t._v("\nresult "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("$")]),t._v("save_result"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" rescaled"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("format "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" formats"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("$")]),t._v("output"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("$")]),t._v("PNG"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" list"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("red"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"R"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("green"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"G"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("blue"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"B"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# create a job")]),t._v("\njob "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" create_job"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("graph "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" result"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" title "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"S1 Example R"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" description "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Getting Started example on openeo.org for R-client"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# then start the processing of the job and turn on logging (messages that are captured on the back-end during the process execution)")]),t._v("\nstart_job"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("job "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" job"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" log "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("TRUE")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("Now the resulting PNG file of the RGB backscatter composite is stored as a PNG file in the current working directory. It looks like this:")]),t._v(" "),e("p",[e("img",{attrs:{src:a(190),alt:"RGB composite"}})]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("The "),e("a",{attrs:{href:"https://github.com/Open-EO/openeo-r-client/blob/master/examples/S1-example.R",target:"_blank",rel:"noopener noreferrer"}},[t._v("source code"),e("OutboundLink")],1),t._v(" of the example can also be found on the R client repository on Github.")])]),t._v(" "),e("h2",{attrs:{id:"user-defined-functions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#user-defined-functions"}},[t._v("#")]),t._v(" User Defined Functions")]),t._v(" "),e("p",[t._v("If your use case can not be accomplished with the "),e("RouterLink",{attrs:{to:"/documentation/1.0/processes.html"}},[t._v("default processes")]),t._v(" of openEO, you can define a "),e("RouterLink",{attrs:{to:"/documentation/1.0/glossary.html#user-defined-function-udf"}},[t._v("user defined function")]),t._v(".")],1),t._v(" "),e("p",[t._v("In general the processing workflow works by uploading the Python or R script into the users file directory on the back-end and reference the script via its URL or by its relational name (e.g. "),e("code",[t._v("/scripts/script1.R")]),t._v(") in the function "),e("code",[t._v("run_udf")]),t._v(". The latter function is a predefined openEO process that the back-end might provide, if UDFs are supported.")]),t._v(" "),e("p",[t._v("Find out more about UDFs in the respective "),e("a",{attrs:{href:"https://github.com/Open-EO/openeo-udf",target:"_blank",rel:"noopener noreferrer"}},[t._v("Python UDF"),e("OutboundLink")],1),t._v(" and "),e("a",{attrs:{href:"https://github.com/Open-EO/openeo-r-udf",target:"_blank",rel:"noopener noreferrer"}},[t._v("R UDF"),e("OutboundLink")],1),t._v(" repositories with their documentation and examples.")])])}),[],!1,null,null,null);e.default=n.exports}}]);