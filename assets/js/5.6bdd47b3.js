(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{151:function(e,t,n){"use strict";var i={computed:{unreleased(){return null!==this.version.apiTag.match(/(draft|alpha|beta)/i)},versioned(){return null!==this.$page.regularPath.match(/\/documentation\/([^\/]+)\//)},otherVersions(){return this.$site.themeConfig.versions.map((e,t)=>{var n=this.$site.themeConfig.versions[this.versionIndex],i=this.$site.themeConfig.versions[t];return e.regularPath=this.$page.regularPath.replace(n.path,i.path),e}).filter((e,t)=>t!==this.versionIndex&&this.$site.pages.findIndex(t=>t.regularPath==e.regularPath)>=0)},version(){return this.$site.themeConfig.versions[this.versionIndex]},defaultVersion(){return this.$site.themeConfig.versions[this.$site.themeConfig.defaultVersion]},versionIndex(){const{themeConfig:e}=this.$site;var t=this.$page.regularPath.match(/\/documentation\/([^\/]+)\//);if(Array.isArray(t)&&"string"==typeof t[1])for(var n in e.versions)if(e.versions[n].folder===t[1])return parseInt(n);return 0}}},s=n(3),r=Object(s.a)(i,void 0,void 0,!1,null,null,null);t.a=r.exports},172:function(e,t,n){},220:function(e,t,n){"use strict";var i=n(172);n.n(i).a},231:function(e,t,n){"use strict";n.r(t);var i={name:"ProcessesSpec",mixins:[n(151).a],data:()=>({docgenComponent:null}),computed:{documentUrl(){return"/documentation/"+this.version.folder+"/processes.json"}},beforeMount(){Promise.all([n.e(0),n.e(73)]).then(n.t.bind(null,222,7)),n.e(23).then(n.t.bind(null,223,7)).then(e=>{this.docgenComponent=e.default})}},s=(n(220),n(3)),r=Object(s.a)(i,(function(){var e=this.$createElement,t=this._self._c||e;return this.docgenComponent?t(this.docgenComponent,{tag:"component",attrs:{document:this.documentUrl,apiVersion:this.version.apiTag}}):this._e()}),[],!1,null,null,null);t.default=r.exports}}]);