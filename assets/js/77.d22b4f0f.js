(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{477:function(t,s,a){"use strict";a.r(s);var e=a(4),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"getting-started-with-openeo-and-open-data-cube"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getting-started-with-openeo-and-open-data-cube"}},[t._v("#")]),t._v(" Getting started with openEO and Open Data Cube")]),t._v(" "),s("p",[t._v("As a back-end provider who wants to provide its datasets, processes and infrastructure to a broader audience through a\nstandardized interface you may want to implement a driver for openEO.")]),t._v(" "),s("p",[t._v("First of all, you should read carefully the "),s("RouterLink",{attrs:{to:"/documentation/1.0/developers/backends/getting-started.html"}},[t._v("getting started guide for service providers")]),t._v(".")],1),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),s("p",[t._v("The Open Data Cube implementation for openEO is not a full-fledged out-of-the-box openEO back-end,\nbut can be part of the infrastructure for the data management part.\nIn detail it can be used as data source for "),s("RouterLink",{attrs:{to:"/documentation/1.0/developers/api/reference.html#tag/EO-Data-Discovery"}},[t._v("EO Data Discovery")]),t._v(" and e.g.\nin combination with a dask cluster as processing back-end for "),s("RouterLink",{attrs:{to:"/documentation/1.0/developers/api/reference.html#tag/Data-Processing"}},[t._v("Data Processing")]),t._v(".\nIn any case, a "),s("a",{attrs:{href:"#http-rest-interface"}},[t._v("HTTP REST interface must be available in front of ODC to properly answer openEO requests")]),t._v(".")],1)]),t._v(" "),s("p",[t._v("There are three main components involved with ODC and openEO:")]),t._v(" "),s("ol",[s("li",[s("a",{attrs:{href:"#process-graph-parser-for-python"}},[t._v("Process Graph Parser for Python")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#python-processes-for-openeo"}},[t._v("Python Processes for openEO")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#openeo-to-odc-process-mapper"}},[t._v("openEO to ODC Process Mapper")])])]),t._v(" "),s("h2",{attrs:{id:"process-graph-parser-for-python"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#process-graph-parser-for-python"}},[t._v("#")]),t._v(" Process Graph Parser for Python")]),t._v(" "),s("ul",[s("li",[t._v("Repository: "),s("a",{attrs:{href:"https://github.com/Open-EO/openeo-pg-parser-python",target:"_blank",rel:"noopener noreferrer"}},[t._v("openeo-pg-parser-python"),s("OutboundLink")],1)])]),t._v(" "),s("p",[t._v("The process graph parser translates a process graph in json / dict format into a traversable python object. It\nautomatically validates that only collections and processes are used which are available at the back-end.")]),t._v(" "),s("p",[t._v("For example, this "),s("a",{attrs:{href:"https://github.com/Open-EO/openeo-odc/blob/master/tests/process_graphs/evi.json",target:"_blank",rel:"noopener noreferrer"}},[t._v("EVI process graph"),s("OutboundLink")],1),t._v(" can be\ntranslated using the openEO Process Graph Parser in the following way:")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" openeo_pg_parser"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("translate "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" translate_process_graph\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" urllib"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("request\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" json\n\neviJsonProcessGraphURL "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://raw.githubusercontent.com/Open-EO/openeo-odc/master/tests/process_graphs/evi.json'")]),t._v("\njsonUrl "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" urllib"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("urlopen"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("eviJsonProcessGraphURL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndata "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" jsonUrl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("read"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\njsonProcessGraph "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" json"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("loads"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nprocessGraph "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" translate_process_graph"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("jsonProcessGraph"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sort"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("by"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'result'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" node "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" processGraph"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("process_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h2",{attrs:{id:"python-processes-for-openeo"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#python-processes-for-openeo"}},[t._v("#")]),t._v(" Python Processes for openEO")]),t._v(" "),s("ul",[s("li",[t._v("Repository: "),s("a",{attrs:{href:"https://github.com/Open-EO/openeo-processes-python",target:"_blank",rel:"noopener noreferrer"}},[t._v("openeo-processes-python"),s("OutboundLink")],1)])]),t._v(" "),s("p",[t._v("This package is a Python implementation of a subset of "),s("RouterLink",{attrs:{to:"/documentation/1.0/processes.html"}},[t._v("all openeo processes")]),t._v(".")],1),t._v(" "),s("p",[t._v("This package includes implementations based on numbers, numpy and xarray. Based on the type of your input data the\nalgorithm automatically chooses the right implementation. E.g. if your input is an "),s("code",[t._v("xarray.Dataarray")]),t._v(" it will use the\nxarray implementation of the called process. Independent of the input data type a process can therefore simply be\ncalled by:")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" openeo_processes "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" processes\nprocesses"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("subtract"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'y'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("which in this case would use the number implementation and substract 5 from 3. The exact same function could also be\ncalled with two "),s("code",[t._v("xarray.Dataarray")]),t._v("s as input.")]),t._v(" "),s("p",[t._v("From a technical perspective, each process is implemented as a function and a corresponding class with up to four static\nfunctions "),s("code",[t._v("exec_num")]),t._v(", "),s("code",[t._v("exec_np")]),t._v(", "),s("code",[t._v("exec_xar")]),t._v(", and "),s("code",[t._v("exec_da")]),t._v(". Within the  context of Open Data Cube the most important\none is "),s("code",[t._v("exec_xar")]),t._v(" - the xarray implementation.")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),s("p",[t._v("The different data type implementations of a single process are completely independent. So one can easily add the\nxarray implementation without editing the implementations for the other data types.")])]),t._v(" "),s("p",[t._v("Implemented ODC processes")]),t._v(" "),s("ul",[s("li",[t._v("load_collection")]),t._v(" "),s("li",[t._v("load_result")])]),t._v(" "),s("p",[t._v("Implemented xarray processes:")]),t._v(" "),s("ul",[s("li",[t._v("array_element")]),t._v(" "),s("li",[t._v("is_nodata")]),t._v(" "),s("li",[t._v("is_nan")]),t._v(" "),s("li",[t._v("is_valid")]),t._v(" "),s("li",[t._v("gt")]),t._v(" "),s("li",[t._v("reduce_dimension")]),t._v(" "),s("li",[t._v("apply")]),t._v(" "),s("li",[t._v("save_result")]),t._v(" "),s("li",[t._v("absolute")]),t._v(" "),s("li",[t._v("sgn")]),t._v(" "),s("li",[t._v("sqrt")]),t._v(" "),s("li",[t._v("mean")]),t._v(" "),s("li",[t._v("min")]),t._v(" "),s("li",[t._v("max")]),t._v(" "),s("li",[t._v("median")]),t._v(" "),s("li",[t._v("sd")]),t._v(" "),s("li",[t._v("variance")]),t._v(" "),s("li",[t._v("quantiles")]),t._v(" "),s("li",[t._v("cummin")]),t._v(" "),s("li",[t._v("cummax")]),t._v(" "),s("li",[t._v("cumproduct")]),t._v(" "),s("li",[t._v("cumsum")]),t._v(" "),s("li",[t._v("sum")]),t._v(" "),s("li",[t._v("product")]),t._v(" "),s("li",[t._v("add")]),t._v(" "),s("li",[t._v("substract")]),t._v(" "),s("li",[t._v("multiply")]),t._v(" "),s("li",[t._v("divide")]),t._v(" "),s("li",[t._v("apply_kernel")])]),t._v(" "),s("h2",{attrs:{id:"openeo-to-odc-process-mapper"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#openeo-to-odc-process-mapper"}},[t._v("#")]),t._v(" openEO to ODC Process Mapper")]),t._v(" "),s("ul",[s("li",[t._v("Repository: "),s("a",{attrs:{href:"https://github.com/Open-EO/openeo-odc",target:"_blank",rel:"noopener noreferrer"}},[t._v("openeo-odc"),s("OutboundLink")],1)])]),t._v(" "),s("p",[t._v("openeo-odc maps an openEO process graph to an executable Python file and thereby ties together the other two packages.\nThe input is a plain openeo process graph in json / dict format (see below) and the output is a python file composed of\none function call per process (see below). In detail each process in the process graph is mapped to a function call to\n"),s("a",{attrs:{href:"https://github.com/openeo-processes-python",target:"_blank",rel:"noopener noreferrer"}},[t._v("openeo-processes-python"),s("OutboundLink")],1),t._v(" package.")]),t._v(" "),s("p",[t._v("For this translation openeo-odc uses internally the "),s("a",{attrs:{href:"https://github.com/openeo-pg-parser-python",target:"_blank",rel:"noopener noreferrer"}},[t._v("openeo-pg-parser-python"),s("OutboundLink")],1),t._v("\npackages. Leveraging the resulting python representation of the process graph "),s("a",{attrs:{href:"https://github.com/openeo-odc",target:"_blank",rel:"noopener noreferrer"}},[t._v("openeo-odc"),s("OutboundLink")],1),t._v("\neach process in the process graph is mapped separately. Next to the correct mapping of the process itself the main task\nof "),s("a",{attrs:{href:"https://github.com/openeo-odc",target:"_blank",rel:"noopener noreferrer"}},[t._v("openeo-odc"),s("OutboundLink")],1),t._v(" is to correctly understand and pass given parameters and arguments\n(this can be simple values but also references previous nodes).")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),s("p",[t._v("opendatacube, xarray and openeo-processes-python are "),s("strong",[t._v("not")]),t._v(" dependencies because this package simply creates a\npython file that can be executed in the correct environment where these dependencies are resolved.")])]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/Open-EO/openeo-odc/blob/master/tests/process_graphs/evi.json",target:"_blank",rel:"noopener noreferrer"}},[t._v("Sample process graph for an EVI calculation (Input)."),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("Sample python output file, generated using the "),s("a",{attrs:{href:"https://github.com/Open-EO/openeo-odc/blob/master/tests/test_odc.py",target:"_blank",rel:"noopener noreferrer"}},[t._v("testing script"),s("OutboundLink")],1),t._v(",\ncalling a number of processes implemented within "),s("a",{attrs:{href:"https://github.com/openeo-processes-python",target:"_blank",rel:"noopener noreferrer"}},[t._v("openeo-processes-python"),s("OutboundLink")],1),t._v(" - notice that the\noutput of a previous function call can easily be used as input for another one.")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" dask"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("distributed "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Client\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" datacube\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" openeo_processes "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" processes\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Initialize ODC instance")]),t._v("\ncube "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" datacube"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Datacube"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Connect to Dask Scheduler")]),t._v("\nclient "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Client"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tcp://xxx.yyy.zzz.kkk:8786'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\ndc_0 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" processes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("load_collection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("odc_cube"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("cube"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'product'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'boa_sentinel_2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11.2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12.9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'y'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("47.1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50.5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'time'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2018-06-15'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2018-06-17'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dask_chunks'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'time'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'auto'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'y'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'measurements'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'B08'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'B04'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'B02'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nnir_2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" processes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("array_element"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'data'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dc_0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'index'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dimension'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bands'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nred_3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" processes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("array_element"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'data'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dc_0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'index'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dimension'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bands'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nblue_4 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" processes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("array_element"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'data'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dc_0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'index'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dimension'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bands'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nsub_5 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" processes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("subtract"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nir_2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'y'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" red_3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\np1_6 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" processes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("multiply"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" red_3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'y'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\np2_7 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" processes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("multiply"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" blue_4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'y'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7.5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nsum_8 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" processes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("sum")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'data'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" nir_2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" p1_6"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" p2_7"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndiv_9 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" processes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("divide"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" sub_5"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'y'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" sum_8"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\np3_10 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" processes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("multiply"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" div_9"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'y'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nevi_1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" processes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("reduce_dimension"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'data'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" p3_10"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dimension'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'spectral'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'reducer'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nmin_12 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" processes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("min")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'data'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" evi_1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dimension'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'time'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nmintime_11 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" processes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("reduce_dimension"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'data'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" min_12"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dimension'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'temporal'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'reducer'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nsave_13 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" processes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("save_result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'data'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mintime_11"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'format'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'netCDF'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h2",{attrs:{id:"adding-a-new-process"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#adding-a-new-process"}},[t._v("#")]),t._v(" Adding a new process")]),t._v(" "),s("p",[t._v("To add a new process which can be used with ODC/Xarray/Dask, there are changes required in two of the components:")]),t._v(" "),s("ol",[s("li",[s("a",{attrs:{href:"#openeo-processes-python"}},[t._v("openeo-processes-python")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#openeo-odc"}},[t._v("openeo-odc")])])]),t._v(" "),s("p",[t._v("No changes are required in openeo-pg-parser-python.")]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("Attention")]),t._v(" "),s("p",[t._v("Make sure you always have the latest version of the required repositories "),s("a",{attrs:{href:"https://github.com/Open-EO/openeo-pg-parser-python",target:"_blank",rel:"noopener noreferrer"}},[t._v("openEO Process Graph Parser"),s("OutboundLink")],1),t._v(", "),s("a",{attrs:{href:"https://github.com/Open-EO/openeo-processes-python",target:"_blank",rel:"noopener noreferrer"}},[t._v("openEO Processes Python"),s("OutboundLink")],1),t._v(" and "),s("a",{attrs:{href:"https://github.com/Open-EO/openeo-odc",target:"_blank",rel:"noopener noreferrer"}},[t._v("openEO ODC Process Mapper"),s("OutboundLink")],1),t._v(" installed when you test your code.")])]),t._v(" "),s("h3",{attrs:{id:"openeo-processes-python"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#openeo-processes-python"}},[t._v("#")]),t._v(" openeo-processes-python")]),t._v(" "),s("ol",[s("li",[t._v("Select a process from "),s("a",{attrs:{href:"https://processes.openeo.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("processes.openeo.org"),s("OutboundLink")],1),t._v(" which does not yet have a xarray\nimplementation in "),s("a",{attrs:{href:"https://github.com/openeo-processes-python",target:"_blank",rel:"noopener noreferrer"}},[t._v("openeo-processes-python"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("li",[t._v("Clone "),s("a",{attrs:{href:"https://github.com/openeo-processes-python",target:"_blank",rel:"noopener noreferrer"}},[t._v("openeo-processes-python"),s("OutboundLink")],1),t._v(", checkout a new branch, and start\nimplementing the missing process. If a function and class already exists for this process just implement the\n"),s("code",[t._v("exec_xar")]),t._v(" method, if not you also need to implement the function and class itself. Make sure you properly handle\nall parameters defined for this process. Add a test for your process with xarray data as input (in the "),s("code",[t._v("conftest.py")]),t._v("\nthe "),s("code",[t._v("test_data")]),t._v("-fixture is available).")]),t._v(" "),s("li",[t._v("Push your code and open a PR.")])]),t._v(" "),s("h3",{attrs:{id:"openeo-odc"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#openeo-odc"}},[t._v("#")]),t._v(" openeo-odc")]),t._v(" "),s("ol",[s("li",[t._v("Clone "),s("a",{attrs:{href:"https://github.com/openeo-odc",target:"_blank",rel:"noopener noreferrer"}},[t._v("openeo-odc"),s("OutboundLink")],1),t._v(" and checkout a new branch.")]),t._v(" "),s("li",[t._v("Ensure that there is a mapper available for your newly implemented process. Currently the mapping is done based\non the input parameters, so some processes may automatically be supported, for some others an additional\nmapper function must be implemented.")]),t._v(" "),s("li",[t._v("Check your mapping works by adding a test for the new process which correctly translates its dict representation\nto the processes function call.")]),t._v(" "),s("li",[t._v("Push your code and open a PR.")])]),t._v(" "),s("h2",{attrs:{id:"testing-the-new-environment"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#testing-the-new-environment"}},[t._v("#")]),t._v(" Testing the new environment")]),t._v(" "),s("p",[t._v("The following steps describe how to test that everything works:")]),t._v(" "),s("ol",[s("li",[t._v("You can create a process graph using the "),s("a",{attrs:{href:"https://editor.openeo.org/?server=https://openeo.eodc.eu/v1.0&discover=1",target:"_blank",rel:"noopener noreferrer"}},[t._v("openEO Web Editor"),s("OutboundLink")],1),t._v(" and store the corresponding JSON locally.")]),t._v(" "),s("li",[t._v("Modify the collection in "),s("code",[t._v("load_collection")]),t._v(" with one available in your local Open Data Cube instance. Check that bands, temporal and spatial extent are available in your ODC product. Translate the process graph into an executable Python script:"),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" openeo_odc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("map_to_odc "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" map_to_odc\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" openeo_pg_parser"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("translate "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" translate_process_graph\n\nprocess_graph_json "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'your_test_process_graph.json'")]),t._v("\nodc_url "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tcp://xxx.yyy.zzz.kkk:8786'")]),t._v("\ngraph "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" translate_process_graph"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("process_graph_json"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                              process_defs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sort"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("by"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'result'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nnodes "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" map_to_odc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("graph"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" odc_url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Write to disk")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("open")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("process_graph "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('".py"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"w"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" node "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" nodes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("write"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nodes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),s("li",[t._v("Execute the obtained script and check if it succeeds.")])]),t._v(" "),s("h2",{attrs:{id:"http-rest-interface"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http-rest-interface"}},[t._v("#")]),t._v(" HTTP REST Interface")]),t._v(" "),s("p",[t._v("The next step would be to set up a HTTP REST interface (i.e. an implementation of the openEO HTTP API) for the new openEO ODC environment.\nIt must be available in front of ODC to properly answer openEO client requests.\nCurrently, the "),s("a",{attrs:{href:"https://openeo.eodc.eu/v1.0",target:"_blank",rel:"noopener noreferrer"}},[t._v("EODC"),s("OutboundLink")],1),t._v(" and "),s("a",{attrs:{href:"https://openeo.eurac.edu/",target:"_blank",rel:"noopener noreferrer"}},[t._v("EURAC"),s("OutboundLink")],1),t._v(" back-ends use ODC and thus\nare the first implementations of back-ends to look at.")]),t._v(" "),s("p",[t._v("If you have any questions, please "),s("RouterLink",{attrs:{to:"/contact.html"}},[t._v("contact us")]),t._v(".")],1)])}),[],!1,null,null,null);s.default=n.exports}}]);