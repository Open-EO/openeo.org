(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{241:function(t,a,s){t.exports=s.p+"assets/img/example_result.422d589b.png"},361:function(t,a,s){"use strict";s.r(a);var e=s(3),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"python-client"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#python-client"}},[t._v("#")]),t._v(" Python Client")]),t._v(" "),e("h2",{attrs:{id:"installation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#installation"}},[t._v("#")]),t._v(" Installation")]),t._v(" "),e("p",[t._v("Before you install the Python client module into your Python environment, please make sure that you have at least Python version 3.5.")]),t._v(" "),e("p",[t._v("There are two versions of the module available, the released version, which is the most stable one and the less stable latest available version with the newest features.")]),t._v(" "),e("p",[t._v("The "),e("a",{attrs:{href:"https://pypi.org/project/openeo/",target:"_blank",rel:"noopener noreferrer"}},[t._v("latest release"),e("OutboundLink")],1),t._v(" can be installed via "),e("a",{attrs:{href:"https://pypi.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("PyPi"),e("OutboundLink")],1),t._v(" by using the following command:")]),t._v(" "),e("div",{staticClass:"language-shell script extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("pip "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" openeo\n")])])]),e("p",[t._v("If you want to install the latest (unreleased) version you have to clone it from the "),e("a",{attrs:{href:"https://github.com/Open-EO/openeo-python-client",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub project"),e("OutboundLink")],1),t._v(" and install it locally:")]),t._v(" "),e("div",{staticClass:"language-shell script extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" DIR_OF_CHOICE\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/Open-EO/openeo-python-client.git\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" openeo-python-client\npip "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -e "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n")])])]),e("p",[t._v("You can check the installation by trying to import the openeo module in the Python console:")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" openeo\n")])])]),e("p",[t._v("If this gives you the following output, something went wrong with the installation, please check again the requirements.\nIf you have still troubles installing the Python module, feel free to "),e("RouterLink",{attrs:{to:"/contact.html"}},[t._v("contact us")]),t._v(" or leave an issue at the "),e("a",{attrs:{href:"https://github.com/Open-EO/openeo-python-client/issues",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub project"),e("OutboundLink")],1),t._v(".")],1),t._v(" "),e("div",{staticClass:"language-shell script extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("import")]),t._v(" openeo\nTraceback "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("most recent call last"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(":\n  File "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<stdin>"')]),t._v(", line "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(", "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("module"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nModuleNotFoundError: No module named "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'openeo'")]),t._v("\n")])])]),e("p",[t._v("Now that the installation was successfully finished, we can now connect to openEO compliant backends.\nIn the following chapters we quickly walk through the main features of the Python client.")]),t._v(" "),e("h2",{attrs:{id:"exploring-a-backend"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#exploring-a-backend"}},[t._v("#")]),t._v(" Exploring a backend")]),t._v(" "),e("p",[t._v("If you do not know an openEO backend that you want to connect to yet, you can have a look at the "),e("a",{attrs:{href:"https://hub.openeo.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("openEO Hub"),e("OutboundLink")],1),t._v(", to find all known backends with information on their capabilities.")]),t._v(" "),e("p",[t._v("For this tutorial we will use the Google Earth Engine openEO driver (https://earthengine.openeo.org)\nNote that the code snippets in this guide works the same way for the other backend listed in the openEO Hub. Just the collection identifier and band names might differ between the backends.")]),t._v(" "),e("p",[t._v("First we need to establish a connection to the backend.")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" openeo\nconnection "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" openeo"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("connect"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://earthengine.openeo.org"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("The connection object bundles information about the backend, so that the provided data and capabilities can be accessed.\nThe capabilities of the backend is publicly available and therefore you do not need to have an account on the backend for reading them.")]),t._v(" "),e("h3",{attrs:{id:"collections"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#collections"}},[t._v("#")]),t._v(" Collections")]),t._v(" "),e("p",[t._v("Collections represent the basic data the backend provides (e.g. Sentinel 2 collection).\nCollections are used as input data for job executions ("),e("RouterLink",{attrs:{to:"/documentation/1.0/glossary.html#eo-data-collections"}},[t._v("more info on collections")]),t._v(").\nWith the following code snippet you can get all available collection names and their description.")],1),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# List of available data collections and some metadata (dict)")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Available Collections"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("connection"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("list_collections"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# Dictionary of the full metadata of the "COPERNICUS/S2" collection (dict)')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Describe COPERNICUS/S2"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("connection"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("describe_collection"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"COPERNICUS/S2"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("The execution of the code above results in:")]),t._v(" "),e("div",{staticClass:"language-shell script extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("Available Collections\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'id'")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'AAFC/ACI'")]),t._v(", "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'title'")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Canada AAFC Annual Crop Inventory'")]),t._v(", "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("."),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(", "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'id'")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'COPERNICUS/S2'")]),t._v(", "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("."),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nDescribe COPERNICUS/S2\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'id'")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'COPERNICUS/S2'")]),t._v(", "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'title'")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("., "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'description'")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("., "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bands'")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("., "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("."),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("By calling "),e("code",[t._v("list_collection")]),t._v(", a list of collection dictionaries is returned.\nThe collections in the list have a general description, but to get the full collection metadata you need to call the "),e("code",[t._v("describe_collection")]),t._v(" method.")]),t._v(" "),e("h3",{attrs:{id:"processes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#processes"}},[t._v("#")]),t._v(" Processes")]),t._v(" "),e("p",[t._v("Processes in openEO are tasks that can be applied on (EO) data. The input of a process might be the output of another process, so that several connected processes form a process graph. Therefore, a process resembles the smallest unit of task descriptions in openEO ("),e("RouterLink",{attrs:{to:"/documentation/1.0/glossary.html#processes"}},[t._v("more info on processes")]),t._v(").\nThe following code snippet shows how to get the available processes.")],1),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Available Processes"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# List of available openEO processes with full metadata (dict)")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("connection"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("list_processes"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# List of available openEO processes by identifiers (string)")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"id"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" process "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" connection"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("list_processes"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("Resulting in:")]),t._v(" "),e("div",{staticClass:"language-shell script extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("Available Processes\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'id'")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'absolute'")]),t._v(", "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'summary'")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Absolute value'")]),t._v(", "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'description'")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Computes the absolute value of a real number "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),t._v("x"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v(', which is the "unsigned" portion of x and often denoted as *|x|*.'),e("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),e("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v("The no-data value "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),t._v("null"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v(" is passed through and therefore gets propagated.'")]),t._v(", "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'absolute'")]),t._v(", "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'add'")]),t._v(", "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'add_dimension'")]),t._v(", "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'aggregate_temporal_frequency'")]),t._v(", "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'anomaly'")]),t._v(", "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'apply'")]),t._v(", "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'arccos'")]),t._v(","),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),e("p",[t._v("The "),e("code",[t._v("list_processes")]),t._v(" method returns a list of dictionaries with all openEO processes that the backend provides.\nEach dictionary in the list contains the process identifier and metadata about the process, such as expected arguments and return types.\nIn the third print statement of the code block, just the identifiers of the supported processes are listed.\nFor a graphical overview of the openEO processes, there is an "),e("RouterLink",{attrs:{to:"/documentation/1.0/processes.html"}},[t._v("online documentation")]),t._v(" for general process descriptions and the "),e("a",{attrs:{href:"https://hub.openeo.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("openEO Hub"),e("OutboundLink")],1),t._v(" for backend specific process descriptions.")],1),t._v(" "),e("h2",{attrs:{id:"authentication"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#authentication"}},[t._v("#")]),t._v(" Authentication")]),t._v(" "),e("p",[t._v("In the code snippets above, authentication is not necessary, since we only fetch general information about the backend.\nTo run your own jobs at the backend or to access job results, you need to authenticate at the backend.")]),t._v(" "),e("p",[t._v("Depending on the backend, there might be two different approaches to authenticate.\nYou need to inform yourself at your backend provider of choice, which authentication approach you have to carry out.\nYou can also have a look at the "),e("a",{attrs:{href:"https://hub.openeo.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("openEO Hub"),e("OutboundLink")],1),t._v(" to see the available authentication types of the backends.")]),t._v(" "),e("h3",{attrs:{id:"oidc-authentication"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oidc-authentication"}},[t._v("#")]),t._v(" OIDC Authentication")]),t._v(" "),e("p",[t._v("The OIDC ("),e("a",{attrs:{href:"https://openid.net/connect/",target:"_blank",rel:"noopener noreferrer"}},[t._v("OpenID Connect"),e("OutboundLink")],1),t._v(") authentication can be used to authenticate via an external service given a client ID.\nThe following code snippet shows how to log in via oidc authentication:")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Authenticate with OIDC authentication"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconnection"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("authenticate_OIDC"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Client ID"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("Calling this method opens your system web browser, with which you can authenticate yourself on the backend authentication system.\nAfter that the website will give you the instructions to go back to the python client, where your connection has logged your account in.\nThis means, that every call that comes after that via the connection variable is executed by your user account.")]),t._v(" "),e("h3",{attrs:{id:"basic-authentication"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#basic-authentication"}},[t._v("#")]),t._v(" Basic Authentication")]),t._v(" "),e("p",[t._v("The Basic authentication method is a common way of authenticate HTTP requests given username and password.\nNote that the preferred authentication method is OIDC, so if possible use it instead of Basic authentication.\nThe following code snippet shows how to log in via Basic authentication:")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Authenticate with Basic authentication"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconnection"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("authenticate_basic"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"username"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"password"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("After successfully calling the "),e("code",[t._v("authenticate_basic")]),t._v(" method, you are logged into the backend with your account.\nThis means, that every call that comes after that via the connection variable is executed by your user account.")]),t._v(" "),e("h2",{attrs:{id:"creating-a-datacube"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#creating-a-datacube"}},[t._v("#")]),t._v(" Creating a Datacube")]),t._v(" "),e("p",[t._v("Now that we know how to discover the backend and how to authenticate, lets continue by defining creating a new job.\nFirst you need to initialize a datacube by selecting a collection from the backend via calling "),e("code",[t._v("load_collection")]),t._v(":")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[t._v("datacube "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" connection"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("load_collection"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"COPERNICUS/S1_GRD"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("This results in a "),e("RouterLink",{attrs:{to:"/documentation/1.0/glossary.html#spatial-data-cubes"}},[t._v("datacube object")]),t._v(' with the complete dataset of the "COPERNICUS/S1_GRD" collection.\nYou might want to limit the datasets extent already when loading it. This can be done by setting the extent of the spatial and temporal dimensions as well as by filtering the bands dimension.')],1),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[t._v("datacube "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" connection"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("load_collection"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"COPERNICUS/S1_GRD"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                                      spatial_extent"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"west"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("16.06")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"south"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("48.06")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"east"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("16.65")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"north"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("48.35")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"crs"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"EPSG:4326"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                                      temporal_extent"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2017-03-01"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2017-04-01"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                                      bands"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"VV"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"VH"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("You can also filter the datacube on a later point by using the following filter methods:")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[t._v("datacube "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" datacube"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("filter_bbox"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("west"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("16.06")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" south"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("48.06")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" east"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("16.65")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" north"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("48.35")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" crs"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"EPSG:4326"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndatacube "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" datacube"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("filter_temporal"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("start_date"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2017-03-01"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" end_date"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2017-04-01"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndatacube "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" datacube"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("filter_bands"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"VV"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"VH"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("Now, having the input data ready, we want to apply a process on the datacube. Therefore, we can call the process directly on the datacube object.\nEvery datacube object contains a process graph, describing the processes that will be applied on it.\nBy calling a process on the datacube it returns a datacube with the process added to its graph.")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[t._v("datacube "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" datacube"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("max_time"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v('The datacube is now reduced by the time dimension, by taking the maximum value of the timeseries values. Now the datacube has not time dimension left.\nSimiliar so called "reducer" processes also exist for minimum and mean values of the timeseries. A list of supported processes using the Python client datacube can be found on the '),e("a",{attrs:{href:"https://open-eo.github.io/openeo-python-client/",target:"_blank",rel:"noopener noreferrer"}},[t._v("official documentation"),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("p",[t._v("Applying a process not supported by the Python client can be added to the datacube manually:")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[t._v("datacube "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" datacube"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("process_id"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ndvi"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n                            args"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"data"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"from_node"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" datacube"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_pg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n                                   "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nir"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"B8"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n                                   "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"red"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"B4"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("This applies the "),e("RouterLink",{attrs:{to:"/documentation/1.0/processes.html#ndvi"}},[t._v('"ndvi" process')]),t._v(' to the datacube with the arguments of "nir" and "red".\nThe "data" argument defines the input of the process and we chose latest added process of the datacube.')],1),t._v(" "),e("p",[t._v("Note that everything applied to the datacube at this point is neither executed locally on your machine nor executed on the backend.\nIt just defines the input data and process chain the backend needs to apply, when sending and executing the datacube at the backend.\nHow this can be done is the topic of the next chapter.")]),t._v(" "),e("h2",{attrs:{id:"job-management"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#job-management"}},[t._v("#")]),t._v(" Job Management")]),t._v(" "),e("p",[t._v("Assuming that the definition of the datacube object and all related processes is finished, we can now send it to the backend and start the execution.\nIn openEO, an execution of a process graph (here defined in the datacube object) is called a "),e("RouterLink",{attrs:{to:"/documentation/1.0/glossary.html#data-processing-modes"}},[t._v("job")]),t._v(". Therefore, we need to create a job at the backend using our datacube.")],1),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Creating a new job at the backend by sending the datacube information.")]),t._v("\njob "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" datacube"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("send_job"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("The "),e("code",[t._v("send_job")]),t._v(" method sends all necessary information to the backend and creates a new job, which gets returned.\nAfter calling this, the job is just created, but has not started the execution at the backend.")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Starting the execution of the job at the backend.")]),t._v("\njob"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("start_job"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Get job description")]),t._v("\njob"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("describe_job"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("The "),e("code",[t._v("start_job")]),t._v(" method starts the execution of the job at the backend.\nYou can use the "),e("code",[t._v("describe_job")]),t._v(' method to get the current status (e.g. "error", "running", "finished") of the job.\nWhen the job is finished, calling '),e("code",[t._v("download_results")]),t._v(" will download the result to your current directory. You can\nspecify a different output directory by passing the path as first parameter:")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Download job results to current directory")]),t._v("\njob"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("download_results"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Download job results to different path")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Windows")]),t._v("\njob"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("download_results"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"C:\\temp"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Linux")]),t._v("\njob"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("download_results"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/tmp"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("This only works if the job execution finished already. To let your Python script wait until the job has finished and\ndownload it automatically, you can use the "),e("code",[t._v("start_and_wait")]),t._v(" method.")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Starts the job and waits until it finished to download the result.")]),t._v("\njob"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("start_and_wait"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("download_results"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("Now you know the general workflow of job executions.")]),t._v(" "),e("h2",{attrs:{id:"example-walkthrough"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#example-walkthrough"}},[t._v("#")]),t._v(" Example Walkthrough")]),t._v(" "),e("p",[t._v("In this chapter we will walk through an earth observation use case using the Python client and the Google Earth Engine backend.\nWe want to produce a monthly RGB composite of Sentinel 1 backscatter data over the area of Vienna, Austria for three\nmonths in 2017. This can be used for classification and crop monitoring.\nIt is also one of the Use Cases defined for the openEO project ("),e("a",{attrs:{href:"https://zenodo.org/record/1065474#.Xql0cfmxVhE",target:"_blank",rel:"noopener noreferrer"}},[t._v("see proposal"),e("OutboundLink")],1),t._v(").")]),t._v(" "),e("p",[t._v("First, we connect to the backend and authenticate ourselves via Basic authentication.")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" openeo\n\ncon "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" openeo"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("connect"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("GEE_DRIVER_URL"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ncon"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("authenticate_basic"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("user"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" password"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("Now that we are connected, we can initialize our datacube object with the area around Vienna and the time range of interest using Sentinel 1 data.")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[t._v("datacube "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" con"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("load_collection"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"COPERNICUS/S1_GRD"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                               spatial_extent"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"west"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("16.06")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"south"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("48.06")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"east"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("16.65")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"north"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("48.35")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"crs"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"EPSG:4326"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                               temporal_extent"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2017-03-01"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2017-06-01"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                               bands"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"VV"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("Since we are creating a monthly RGB composite, we need three (R, G and B) separated time ranges.\nTherefore, we split the datacube into three datacubes by filtering temporal for March, April and May.")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[t._v("march "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" datacube"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("filter_temporal"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2017-03-01"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2017-04-01"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\napril "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" datacube"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("filter_temporal"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2017-04-01"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2017-05-01"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nmay "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" datacube"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("filter_temporal"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2017-05-01"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2017-06-01"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("Now that we split it into the correct time range, we have to aggregate the timeseries values into a single image.\nTherefore, we make use of the Python Client function "),e("code",[t._v("mean_time")]),t._v(", which reduces the time dimension, by taking for every timeseries the mean value.")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[t._v("mean_march "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" march"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mean_time"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nmean_april "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" april"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mean_time"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nmean_may "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" may"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mean_time"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("Now we have the three images that will be combined into the temporal composite.\nBut before merging them into one datacube object, we need to rename the bands of the images, because otherwise, they would be overwritten in the merging process."),e("br"),t._v('\nThis is because at the moment the three datacubes have one band named "VV" (see '),e("code",[t._v("load_collection")]),t._v(' statement above).\nIf we would now merge two of them, it would overwrite the "VV" band of one of the originals and keep the band from the other cube (see '),e("RouterLink",{attrs:{to:"/documentation/1.0/processes.html#merge_cubes"}},[t._v('"merge_cubes" description')]),t._v(").\nTherefore, we rename the bands of the datacubes using the "),e("code",[t._v("rename_labels")]),t._v(' process to "R", "G" and "B".\nAfter that we merge them into the "RGB" datacube, which has now three bands ("R", "G" and "B")')],1),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[t._v("R_band "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mean_march"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rename_labels"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dimension"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bands"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" target"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"R"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nG_band "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mean_april"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rename_labels"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dimension"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bands"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" target"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"G"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nB_band "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mean_may"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rename_labels"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dimension"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bands"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" target"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"B"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nRG "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" R_band"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("merge"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("G_band"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nRGB "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" RG"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("merge"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("B_band"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("To make the values match the RGB values from 0 to 255, we need to scale them. Therefore, we apply the "),e("code",[t._v("linear_scale")]),t._v(" process to the datacube.\nIt is not part of the fully implemented functions of the Python client, so we need to adjust it manually. This might change in future versions of the client.")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" openeo"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rest"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("datacube "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" DataCube\n\nlin_scale_subcube "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DataCube"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" RGB"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("connection"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nlin_scale_subcube "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" lin_scale_subcube"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("linear_scale_range"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nlin_scale_subcube"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_pg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("arguments"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"x"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"from_parameter"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"x"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\ndatacube "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" RGB"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("apply")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lin_scale_subcube"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_pg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v('Last but not least, we add the process to save the result of the processing. There we define that the result should be a PNG file.\nWe also set, which band should be used for "red", "green" and "blue" colour in the options.')]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[t._v("datacube "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" datacube"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("save_result"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("format")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"PNG"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"red"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"R"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"green"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"G"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"blue"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"B"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("With the last process we have finished the datacube definition and can create and start the job at the backend.")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[t._v("job "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" datacube"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("send_job"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\njob"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("start_and_wait"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("download_results"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("Now the resulting PNG file of the RGB backscatter composite is in your current directory.")]),t._v(" "),e("p",[e("img",{attrs:{src:s(241),alt:"Python client RGB composite",title:"RGB composite"}})]),t._v(" "),e("p",[t._v("The "),e("a",{attrs:{href:"https://github.com/Open-EO/openeo-python-client/blob/8de1f2ea6754126cccc663c009a2f0290299a5ea/examples/gee_uc1_temp.py",target:"_blank",rel:"noopener noreferrer"}},[t._v("source code"),e("OutboundLink")],1),t._v(" of this example can be found on GitHub.")]),t._v(" "),e("h2",{attrs:{id:"user-defined-function"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#user-defined-function"}},[t._v("#")]),t._v(" User Defined Function")]),t._v(" "),e("p",[t._v("If your use case can not be accomplished with the "),e("RouterLink",{attrs:{to:"/documentation/1.0/processes.html"}},[t._v("default processes")]),t._v(" of openEO, you can define a "),e("RouterLink",{attrs:{to:"/documentation/1.0/glossary.html#user-defined-function-udf"}},[t._v("user defined function")]),t._v(".\nTherefore, you can create a Python function that will be executed at the backend and functions as a process in your process graph.")],1),t._v(" "),e("p",[t._v("Some examples using UDFs can be found in the "),e("a",{attrs:{href:"https://github.com/Open-EO/openeo-python-client/tree/master/examples/udf",target:"_blank",rel:"noopener noreferrer"}},[t._v("Python Client Repository"),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("h2",{attrs:{id:"additional-information"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#additional-information"}},[t._v("#")]),t._v(" Additional Information")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/Open-EO/openeo-python-client/tree/master/examples",target:"_blank",rel:"noopener noreferrer"}},[t._v("Examples"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/Open-EO/openeo-python-client/tree/master/examples/notebooks",target:"_blank",rel:"noopener noreferrer"}},[t._v("Jupyther Notebooks"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://open-eo.github.io/openeo-python-client/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Documentation"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/Open-EO/openeo-python-client",target:"_blank",rel:"noopener noreferrer"}},[t._v("Repository"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=n.exports}}]);