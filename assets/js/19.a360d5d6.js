(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{156:function(e,t,n){"use strict";var r={computed:{unreleased(){return null!==this.version.apiTag.match(/(draft|alpha|beta)/i)},versioned(){return null!==this.$page.regularPath.match(/\/documentation\/([^\/]+)\//)},otherVersions(){return this.$site.themeConfig.versions.map((e,t)=>{var n=this.$site.themeConfig.versions[this.versionIndex],r=this.$site.themeConfig.versions[t];return e.regularPath=this.$page.regularPath.replace(n.path,r.path),e}).filter((e,t)=>t!==this.versionIndex&&this.$site.pages.findIndex(t=>t.regularPath==e.regularPath)>=0)},version(){return this.$site.themeConfig.versions[this.versionIndex]},defaultVersion(){return this.$site.themeConfig.versions[this.$site.themeConfig.defaultVersion]},versionIndex(){const{themeConfig:e}=this.$site;var t=this.$page.regularPath.match(/\/documentation\/([^\/]+)\//);if(Array.isArray(t)&&"string"==typeof t[1])for(var n in e.versions)if(e.versions[n].folder===t[1])return parseInt(n);return 0}}},s=n(4),i=Object(s.a)(r,void 0,void 0,!1,null,null,null);t.a=i.exports},318:function(e,t,n){"use strict";n.r(t);var r={name:"ProcessesSpec",mixins:[n(156).a],components:{DocGen:()=>Promise.all([n.e(0),n.e(5)]).then(n.bind(null,317))},computed:{documentUrl(){return"/documentation/"+this.version.folder+"/processes.json"}}},s=n(4),i=Object(s.a)(r,(function(){var e=this.$createElement;return(this._self._c||e)("DocGen",{attrs:{document:this.documentUrl,apiVersion:this.version.apiTag}})}),[],!1,null,null,null);t.default=i.exports}}]);